"""
this script converts 2-D COMSOL E-field data to a tree. 
"""

import os
import sys
#from scipy.interpolate import griddata 
from ROOT import gROOT
from ROOT import TTree
from ROOT import TFile
from ROOT import TCanvas
c1 = TCanvas()
from ROOT import TH2D
from ROOT import gStyle
gStyle.SetOptStat(0)

def main(filename):
	print "Processing file:", filename
	basename = os.path.basename(filename)
	basename = os.path.splitext(basename)[0]
        is_chas_comsol = False # >= Jan 2017


	#to find number of columns in file
        #TPC_E_RegGrid_20160718_v2_noNaN = file(filename)

	branchList = [
		"x",
		"y",
		"Ex",
		"Ey",
                "V"
		]

        # COMSOL file generated by Chas:
        if "LXe_chamber_field_20160119" in basename:
            print "Chas COMSOL model"
            is_chas_comsol = True
            branchList = [
                    "r",
                    "z",
                    "E",
                    "V"
                    ]
          

	branchDescriptor = ":".join(branchList)

	output_file = TFile("%s.root" % basename, "recreate")

	tree = TTree("tree", "tree created from TPC E field data")
	print "reading in TPC E field data file with root..."
	tree.ReadFile(filename, branchDescriptor)
	print "...done"
        print "%i entries in tree" % tree.GetEntries()

        tree.Show(0)
        tree.Show(tree.GetEntries()-1)


        if "LXe_chamber_field_20160119" in basename:
            step_size = 0.5 # 0.5-mm bins
            max_r = 255.0/2
            n_bins_r = int(max_r/step_size)
            min_z = -15
            max_z = 70
            n_bins_z = int((max_z-min_z)/step_size)
            hist = TH2D("Efieldhist", "", 
                n_bins_r, 0, max_r, 
                n_bins_z, min_z, max_z,
            )

            hist.GetDirectory().cd()

            draw_cmd = "z*1e3+%f-10.54:r*1e3+%f>>Efieldhist" % (
                step_size/2.0, step_size/2.0)

            #n_drawn = tree.Draw(draw_cmd, "", "goff") # unweighted, for testing hist binning
            n_drawn = tree.Draw(draw_cmd, "E/100", "goff")

        else:
            hist = TH2D("Efieldhist", "", 2900, -145.475, 144.525, 1800, -80, 100)
            #hist = TH2D("Efieldhist", "", 2100, -105, 105, 250, -5, 20)
            #tree.Draw("y-10.54:x-125.475>>Efieldhist", "(sqrt(Ex*Ex + Ey*Ey)/100)*((sqrt(Ex*Ex + Ey*Ey)/100)>950)", "goff")
            hist.GetDirectory().cd()
            tree.Draw("y-10.64:x-125.475>>Efieldhist", "(sqrt(Ex*Ex + Ey*Ey)/100)", "goff")

        print "%i entries drawn" % n_drawn
        tree.Write()
        hist.Write()
	hist.SetXTitle("Rho (mm)")
	hist.SetYTitle("Z (mm)")
        hist.GetXaxis().CenterTitle()
        hist.GetYaxis().CenterTitle()
        #hist.SetMinimum(950)


	hist.Draw("colz")
        iBin = hist.FindBin(0, 18)
	print "bin content:", hist.GetBinContent(iBin)

	c1.SetGrid()
	c1.SetLogz(0)	
	c1.Update()
	c1.Print("EfieldHist_lin_%s.png" % basename)
	raw_input("press enter ")

	c1.SetLogz(1)	
	c1.Update()
	c1.Print("EfieldHist_log_%s.png" % basename)
	raw_input("press enter ")


if __name__ == "__main__":

    if len(sys.argv) < 2:
        print "arguments: [*.dat files]"
        sys.exit(1)

    filename = sys.argv[1]

    main(filename)

